.[class='answer-#{answer.id}']
  p= answer.body

  .voting-answer
    p.[class='rating-answer-#{answer.id}'] 
      | rating: 
      = answer.rating
      
    p.voting-answer-links
      -if can? :unvote, answer.vote_of(current_user)
        =link_to 'Unvote', unvote_answer_path(answer), method: :patch, 
                  data: { type: :json, answer_id: answer.id }, remote: true
        br
      -if can?(:dislike, answer.vote_of(current_user)) || can?(:create_vote, answer.votes.new)
        =link_to "Dislike", dislike_answer_path(answer), method: :patch, 
                  data: { type: :json, answer_id: answer.id }, remote: true
        br
      -if can?(:like, answer.vote_of(current_user)) || can?(:create_vote, answer.votes.new)
        =link_to "Like", like_answer_path(answer), method: :patch, 
                  data: { type: :json, answer_id: answer.id }, remote: true
                  
  .links
    p Links:  
    
    - answer.links.each do |link|
      - if link.gist?
        - link.gist_content.map do |file|
          p= file[:filename]
          textarea= file[:content]
          = link_to 'Delete link', link_path(link), method: :delete, remote: true if can? :destroy, answer
      -else
        p
          = link_to link.name, link.url
          br
          = link_to 'Delete link', link_path(link), method: :delete, remote: true if can? :destroy, answer
  
  .attachments
    -if answer.files.attached?
      -answer.files.each do |file|
        p
          =link_to file.filename.to_s, url_for(file)
          br
          -if can? :destroy, file
            =link_to 'Delete file', attachment_path(file), method: :delete, remote: true  

  .[class='comment-answer-#{answer.id}']
    = render answer.comments

    - if can? :create_comment, Comment
      .answer-new-comment
        p= link_to 'Add comment', '#', class: 'add-comment-link', data: { answer_id: answer.id }
        .[class='form-comment-answer-#{answer.id} hidden']
          = render 'comments/form', resource: answer

  -if can? :update, answer
    p = link_to 'Edit', '#', class: 'edit-answer-link', data: { answer_id: answer.id } 
  -if can? :destroy, answer
    p = link_to 'Delete answer', answer_path(answer), method: :delete, remote: true 
  
  -if can?(:best, answer) && (answer.question.best_answer != answer)
    p= link_to 'Make it the best answer', best_answer_path(answer), method: :post, remote: true

  =form_with model: answer, class: 'hidden', html: { id: "edit-answer-#{answer.id}" } do |f|
    p
      = f.label :body, "Your answer:"
      br
      = f.text_area :body, id: :answer_body
      br
      = f.label :files
      = f.file_field :files, multiple: true, direct_upload: true
      br
    p Links:
    p  
      = f.fields_for :links do |link| 
        = render 'shared/link_fields', f: link
      .links
        = link_to_add_association 'Add link', f, :links, partial: 'shared/link_fields'
      = f.submit 'Save'
  hr  