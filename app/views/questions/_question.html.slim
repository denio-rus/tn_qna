.question-errors
    = render 'shared/errors', resource: question

h3= question.title
p= question.body

.question-voting
  p.question-rating 
    | rating: 
    = question.rating

  p.question-voting-links
    -if current_user && current_user != question.author
      =link_to 'Unvote', unvote_question_path(question), method: :patch, data: { type: :json }, remote: true 
      br
      =link_to "Dislike", dislike_question_path(question), method: :patch, data: { type: :json }, remote: true
      br
      =link_to "Like", like_question_path(question), method: :patch, data: { type: :json }, remote: true


.links
  -if question&.links&.first&.persisted?
    p Links:
    -question.links.each do |link|
      -if link.gist?
        -link.gist_content.map do |file|
          p= file[:filename]
          textarea= file[:content]
          br= link_to 'Delete link', link_path(link), method: :delete, remote: true if current_user&.author_of?(question) && link.persisted?
      -else
        p
          = link_to link.name, link.url
          br
          = link_to 'Delete link', link_path(link), method: :delete, remote: true if current_user&.author_of?(question) && link.persisted?

.files
  - if question.files.attached?
    - question.files.each do |file|
      p
        = link_to file.filename.to_s, url_for(file)
        br
        - if current_user&.author_of?(question)
          = link_to 'Delete file', attachment_path(file), method: :delete, remote: true 

- if question.reward
  p Reward:
  p
    = question.reward.title
    = image_tag question.reward.image

- if current_user&.author_of?(question)
  = link_to 'Edit question','#', class: 'edit-question-link', data: { question_id: question.id }
  br 
  = link_to 'Delete question', question_path(@question), method: :delete 

  = form_with model: @question, class: 'hidden', html: { id: "edit-question-#{question.id}" } do |f|
    p
      = f.label :title
      = f.text_field :title
    p
      = f.label :body
      = f.text_area :body
    p
      = f.label :files
      = f.file_field :files, multiple: true
    p Links:
    p
      = f.fields_for :links do |link| 
        = render 'shared/link_fields', f: link
      .links
        = link_to_add_association 'Add link', f, :links, partial: 'shared/link_fields'
    p
      =f.submit 'Save'