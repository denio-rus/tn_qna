.[class='answer-#{@id}']
  p= @body

  .voting-answer
    p.[class='rating-answer-#{@id}'] 
      | rating: 
      = @rating
      
    p.voting-answer-links
      -if gon.current_user != @user_id
        a. href='/answers/#{@id}/unvote' data-remote='true' data-type='json' data-answer-id='@id' data-method='patch' rel='nofollow' Unvote
        br
        a. href='/answers/#{@id}/dislike' data-remote='true' data-type='json' data-answer-id='@id' data-method='patch' rel='nofollow' Dislike
        br
        a. href='/answers/#{@id}/like' data-remote='true' data-type='json' data-answer-id='@id' data-method='patch' rel='nofollow' Like
                  
  .links
    p Links:  
    
    - answer.links.each do |link|
      - if link.gist?
        - link.gist_content.map do |file, content|
          p= file
          textarea= content
          = link_to 'Delete link', link_path(link), method: :delete, remote: true if current_user&.author_of?(answer)
      -else
        p
          = link_to link.name, link.url
          br
          = link_to 'Delete link', link_path(link), method: :delete, remote: true if current_user&.author_of?(answer)
  
  -if answer.files.attached?
    -answer.files.each do |file|
      p
        =link_to file.filename.to_s, url_for(file)
        br
        -if current_user&.author_of?(answer)
          =link_to 'Delete file', attachment_path(file), method: :delete, remote: true         

  -if current_user&.author_of?(answer)
    p= link_to 'Edit', '#', class: 'edit-answer-link', data: { answer_id: answer.id } 
    p= link_to 'Delete answer', answer_path(answer), method: :delete, remote: true 
  
  -if current_user&.author_of?(answer.question) && answer.question.best_answer != answer
    p= link_to 'Make it the best answer', best_answer_path(answer), method: :post, remote: true

  =form_with model: answer, class: 'hidden', html: { id: "edit-answer-#{answer.id}" } do |f|
    p
      = f.label :body, "Your answer:"
      br
      = f.text_area :body, id: :answer_body
      br
      = f.label :files
      = f.file_field :files, multiple: true, direct_upload: true
      br
    p Links:
    p  
      = f.fields_for :links do |link| 
        = render 'shared/link_fields', f: link
      .links
        = link_to_add_association 'Add link', f, :links, partial: 'shared/link_fields'
      = f.submit 'Save'
  hr  